#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 26 27 35 36 37 38 39 40 41 45 46 47 42 43 44 34>;
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 13 14 15 16 17 18 19 20 21 28 29 30 31 32 33 34 35 42 43 44 45 45 46 47>;
            hold-trigger-on-release;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Qwerty";
            bindings = <
&kp ESC  &kp Q                &kp W            &kp E            &kp R              &kp T                               &kp UP                &kp Y        &kp U               &kp I             &kp O             &kp P                    &kp BSPC
&kp TAB  &HML LEFT_CONTROL A  &HML LEFT_ALT S  &HML LEFT_GUI D  &HML LEFT_SHIFT F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &HMR RIGHT_SHIFT J  &HMR RIGHT_GUI K  &HMR RIGHT_ALT L  &HMR RIGHT_CONTROL SEMI  &kp SQT
&td0     &kp Z                &kp X            &kp C            &kp V              &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M               &kp COMMA         &kp DOT           &kp FSLH                 &kp ESC
                                               &kp LGUI         &mo 1              &lt 3 SPACE                                               &lt 3 ENTER  &mo 2               &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "Symbol";
            bindings = <
&trans  &kp EXCL        &kp AT        &kp HASH      &kp DLLR                              &kp PRCNT                                   &mmv MOVE_UP                     &kp CARET  &kp AMPS        &kp ASTRK       &kp LPAR      &kp RPAR         &trans
&trans  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                          &bt BT_SEL 3                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &kp F16         &trans        &trans        &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &bt BT_SEL 4  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans     &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                                      &trans        &trans                                &trans                                                                       &kp INS    &kp DEL         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "Number";
            bindings = <
&trans  &kp N1        &kp N2        &kp N3     &kp N4     &kp N5                               &mmv MOVE_UP                     &kp N6     &kp N7     &kp N8    &kp N9    &kp N0    &trans
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &trans               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &kp COMMA  &kp DOT    &trans     &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock   &kp F1      &kp F2     &kp F3     &kp F4     &kp F5                                &mmv MOVE_UP                     &kp F6           &kp F7           &kp F8     &kp F9     &kp F10     &kp F11
&trans           &trans      &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans           &mkp LCLK        &mkp MCLK  &mkp RCLK  &trans      &kp F12
&rgb_ug RGB_TOG  &sys_reset  &trans     &trans     &trans     &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &trans     &trans     &sys_reset  &rgb_ug RGB_TOG
                                        &trans     &trans     &trans                                                                 &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
